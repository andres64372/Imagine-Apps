apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: fastapi
  name: fastapi
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - image: iappcr.azurecr.io/fastapi
        imagePullPolicy: Always
        name: fastapi
        env:
        - name: SQLALCHEMY_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: databaseurl
              key: secretkey
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: secretkeyref
              key: secretkey
        resources:
          limits:
            memory: 256Mi
            cpu: "100m"
          requests:
            memory: 128Mi
            cpu: "50m"
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: iappcr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  name: fastapi
spec:
  rules:
  - host: imapp.azurefd.net
    http:
      paths:
      - backend:
          service:
            name: fastapi
            port:
              number: 80
        path: /(.*)
        pathType: ImplementationSpecific
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fastapi
  name: fastapi
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi